--
-- File generated with SQLiteStudio v3.3.3 on Sun Jun 13 12:14:58 2021
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: Classes
CREATE TABLE Classes (class_id INTEGER PRIMARY KEY ASC ON CONFLICT ROLLBACK AUTOINCREMENT NOT NULL UNIQUE, class_name VARCHAR (3, 33) UNIQUE NOT NULL, number_of_students INTEGER NOT NULL);

-- Table: Exams
CREATE TABLE Exams (exam_id INTEGER PRIMARY KEY ASC AUTOINCREMENT NOT NULL ON CONFLICT ROLLBACK UNIQUE ON CONFLICT ROLLBACK, uid REFERENCES users (uid) MATCH "FULL" NOT NULL, semester VARCHAR NOT NULL ON CONFLICT FAIL, answers VARCHAR NOT NULL, questions INTEGER NOT NULL, choices INTEGER NOT NULL, created_at DATE NOT NULL, exam_file BLOB NOT NULL);

-- Table: Grades
CREATE TABLE Grades (grade_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, student_id INTEGER REFERENCES Students (student_id) MATCH "FULL" NOT NULL, exam_id REFERENCES Exams (exam_id) ON DELETE NO ACTION ON UPDATE NO ACTION MATCH "FULL" NOT NULL, semester VARCHAR REFERENCES Exams (semester) ON DELETE NO ACTION ON UPDATE NO ACTION MATCH "FULL" NOT NULL, score float NOT NULL);

-- Table: Students
CREATE TABLE Students (student_id INTEGER PRIMARY KEY ASC AUTOINCREMENT NOT NULL, class_id REFERENCES Classes (class_id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, class_name REFERENCES Classes (class_name) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, student_name VARCHAR (4, 40) NOT NULL, order_number INTEGER NOT NULL, teacher REFERENCES users (full_name) ON DELETE CASCADE ON UPDATE CASCADE, subject NOT NULL REFERENCES users (subject) ON DELETE CASCADE ON UPDATE CASCADE, level VARCHAR (3, 32) NOT NULL, school REFERENCES users (school) ON DELETE CASCADE ON UPDATE CASCADE, academie VARCHAR (4, 30) NOT NULL, direction_provinciale VARCHAR (3, 32) NOT NULL, session VARCHAR (4, 12) NOT NULL, semester VARCHAR (3, 30) NOT NULL);

-- Table: users
CREATE TABLE users (uid INTEGER PRIMARY KEY ON CONFLICT ROLLBACK AUTOINCREMENT NOT NULL UNIQUE DEFAULT (1), full_name VARCHAR (4, 40) NOT NULL, city VARCHAR (30) NOT NULL, school VARCHAR (30) NOT NULL, subject VARCHAR (30) NOT NULL);

COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
